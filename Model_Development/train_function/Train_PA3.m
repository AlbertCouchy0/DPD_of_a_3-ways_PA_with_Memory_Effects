function model=Train_PA3(M,dim,input,output)
%% 预训练
[X,Y] = pre_train(M,real(input),imag(input),real(output),imag(output),dim);

%% 网络设置
layers = [
    sequenceInputLayer(2*(M+1),"Name","sequence")
    fullyConnectedLayer(8,"Name","fc_1")
    reluLayer("Name","relu_1")
    fullyConnectedLayer(8,"Name","fc_2")
    reluLayer("Name","relu_2")
    fullyConnectedLayer(2,"Name","Regression Output")
    regressionLayer("Name","regressionoutput")];

%% 调参
% More Details in https://ww2.mathworks.cn/help/deeplearning/ref/trainingoptions.html
num = 6001;
XValidation = X(:, num:end);
YValidation = Y(:, num:end);
maxEpochs = 1200;
miniBatchSize = 512;
options = trainingOptions('adam', ...
    'MaxEpochs', maxEpochs, ...
    'MiniBatchSize', miniBatchSize, ... 
    'InitialLearnRate', 0.005, ...
    'GradientThreshold', 1, ...
    'ValidationData', {XValidation, YValidation}, ...
    'ValidationFrequency', 40, ...
    'ValidationPatience',5,...
    'Shuffle', 'never', ...
    'Plots', 'training-progress', ...
    'ExecutionEnvironment', 'gpu', ...
    'LearnRateSchedule', 'piecewise', ...
    'LearnRateDropFactor', 0.5, ...
    'LearnRateDropPeriod', 600, ...
    'Verbose', 1, ...
    'VerboseFrequency', 1000);

model = trainNetwork(X(:, 1:num), Y(:, 1:num), layers, options);

end